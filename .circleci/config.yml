version: 2

jobs:
  build:
    docker:
      # specific environment version to avoid incompatible updates
      - image: circleci/android:api-26-alpha

    environment:
      JVM_OPTS: -Xmx3200m
      BUILD_PATH: $HOME/$CIRCLE_PROJECT_REPONAME/app/build
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:MaxPermSize=1024m -Xms512m -XX:+HeapDumpOnOutOfMemoryError"'
      _JAVA_OPTIONS: "-Xms512m -Xmx1024m"
      CI_BUILD_NUMBER: $CIRCLE_BUILD_NUM
      CI_BUILD_URL: $CIRCLE_BUILD_URL
      CI_BRANCH: $CIRCLE_BRANCH
      CI_COMMITTER_NAME: $CIRCLE_USERNAME

    steps:
      - checkout
      - run: chmod +x gradlew
      
      # fix error occurs when a file is missing as mentioned in https://circleci.com/docs/1.0/missing-file/
      - run: cp local.properties.ci local.properties

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
          environment:
            TERM: dumb
      
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      # dependencies
      # - run: if [ ! -d "/usr/local/android-sdk-linux/platforms/android-25" ]; then echo y | android update sdk --no-ui --all --filter "android-25"; fi
      # - run: if [ ! -d "/usr/local/android-sdk-linux/build-tools/25.0.2" ]; then echo y | android update sdk --no-ui --all --filter "build-tools-25.0.2"; fi
      # - run: echo y | android update sdk --no-ui --all --filter "platform-tools"
      # - run: echo y | android update sdk --no-ui --all --filter "extra-android-m2repository"

      # cache_directories
      # - save_cache:
      #     key: dependency-cache
      #     paths:
      #       - /usr/local/android-sdk-linux/platforms/android-25
      #       - /usr/local/android-sdk-linux/build-tools/25.0.2
      #       - /usr/local/android-sdk-linux/extras/android/m2repository

      # test
      # try as mentioned in discuss.circleci.com/t/git-commit-message-in-environment-variable/533/3
      - run: export GIT_COMMIT_DESC="$(git log --format=oneline -n 1 $CIRCLE_SHA1)"
      - run: echo $GIT_COMMIT_DESC
      - run: export CI_MESSAGE="$(git log --format=oneline -n 1 $CIRCLE_SHA1)"

      # Start the emulator and wait for it to have booted
      # - run: 
      #     name: Start emulator
      #     command: emulator -avd circleci-android25 -no-audio -no-window
      #     background: true
      #     parallel: true
      #     environment:
      #       TERM: dumb
      # - run: circle-android wait-for-boot

      # unlock the emulator screen
      # - run: sleep 30
      # - run: adb shell input keyevent 82

      # - run:
      #     name: Download Dependencies
      #     command: ./gradlew androidDependencies
      #     environment:
      #       TERM: dumb
      # - run:
      #     name: Build assembleRelease
      #     command: ./gradlew assembleRelease
      #     environment:
      #       TERM: dumb
      # - store_artifacts:
      #     path: app/build/outputs/apk
      #     destination: apk
      - run:
          name: Setup emulator
          command: sdkmanager "system-images;android-25;google_apis;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-25;google_apis;armeabi-v7a"
      - run:
          name: Launch emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
          background: true

      # - run: circle-android wait-for-boot
      - run:
          name: Wait emulator
          command: |
            # wait for it to have booted
            circle-android wait-for-boot
            # unlock the emulator screen
            sleep 30
            adb shell input keyevent 82

      # unlock the emulator screen
      # - run: sleep 30
      # - run: adb shell input keyevent 82
      
      # run test and collect coverage
      - run: 
          name: Run test and collect coverage
          command: ./gradlew jacocoTestReport -PdisablePreDex
          no_output_timeout: 50m
          environment:
            TERM: dumb
          
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

      - run: mv $BUILD_PATH/reports/jacoco/jacocoTestReport $BUILD_PATH/reports/jacoco/test
      - run: 
          name: Coveralls
          command: ./gradlew coveralls
          environment:
            TERM: dumb

      # post test
      - run: cp -r $BUILD_PATH/outputs $CIRCLE_ARTIFACTS
      - run: cp -r $BUILD_PATH/reports $CIRCLE_TEST_REPORTS
